// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              Int         @id @default(autoincrement())
  name String
  nickName String
  phone String? @unique 
  email String? @unique
  birth String
  password String
  avatar String?
  like Like[]
  tweets Tweet[]
  comments Comment[]
  followers User[] @relation("FollowRelation")
  following User[] @relation("FollowRelation")
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Tweet {
  id              Int         @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  retweetId    Int? @unique
  retweet      Tweet?        @relation("RetweetRelation", fields: [retweetId], references: [id])
  originTweet Tweet? @relation("RetweetRelation")
  payload String
  like Like[]
  comments Comment[]
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}
model Like {
  id        Int      @id @default(autoincrement())
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  tweet   Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Comment {
  id        Int      @id @default(autoincrement())
  payload String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  tweet   Tweet  @relation(fields: [tweetId], references: [id], onDelete: Cascade)
  tweetId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}